name: Build Talos Linux for Rockchip Boards

on:
  push:
    branches:
      - main
      - development
  schedule:
    - cron: '0 3 * * *'  # Daily build at 03:00 UTC

permissions:
  contents: write  # Allows pushing changes to the repository
  issues: write    # Allows creating and managing issues
  packages: write  # Allows publishing packages
  pull-requests: write  # Allows creating and managing pull requests

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        board: [rock-5-itx, other-board]  # Add more boards here
        profile: [rk2410, other-profile]   # Add more profiles here
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Build Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y git make gcc g++ \
          gcc-aarch64-linux-gnu g++-aarch64-linux-gnu \
          libssl-dev bc bison flex qemu-user-static binfmt-support \
          podman podman-docker
          sudo touch /etc/containers/nodocker

      - name: Cache BSP Source Code
        id: cache-bsp
        uses: actions/cache@v4
        with:
          path: bsp
          key: bsp-${{ matrix.board }}-${{ matrix.profile }}-${{ runner.os }}-build-cache
          restore-keys: |
            bsp-${{ matrix.board }}-${{ runner.os }}-build-cache
            bsp-${{ runner.os }}-build-cache

      - name: Clone BSP Source Code
        if: steps.cache-bsp.outputs.cache-hit != 'true'
        run: |
          git clone --recurse-submodules https://github.com/radxa-repo/bsp.git
          cd bsp
          git submodule update --init --recursive

      - name: Initialize BSP Environment
        run: |
          cd bsp
          ./bsp env init
          ./bsp env set PRODUCT=${{ matrix.board }}
          ./bsp env set PROFILE=${{ matrix.profile }}

      - name: Build U-Boot and Kernel
        run: |
          cd bsp
          ./bsp u-boot
          ./bsp linux stable

      - name: Enable Additional Drivers
        run: |
          cd bsp/output/linux
          echo "CONFIG_DRM_PANFROST=y" >> .config  # Panfrost GPU
          echo "CONFIG_MALI_GPU_PARTIAL_RENDER=y" >> .config
          echo "CONFIG_RTL8852BE=y" >> .config  # Network
          echo "CONFIG_RTL88XXAU=y" >> .config
          echo "CONFIG_USB_NET_CDCETHER=y" >> .config
          echo "CONFIG_USB_NET_RNDIS_HOST=y" >> .config
          make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- olddefconfig
          make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- -j$(nproc)

      - name: Build Talos Image
        run: |
          git clone https://github.com/siderolabs/talos.git
          cd talos
          cp ../bsp/output/linux/arch/arm64/boot/Image build/kernel/
          make image

      - name: Generate Checksum
        run: |
          sha256sum talos/output/talos-${{ matrix.board }}.img > talos/output/talos-${{ matrix.board }}.img.sha256

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: talos-${{ matrix.board }}
          path: |
            talos/output/talos-${{ matrix.board }}.img
            talos/output/talos-${{ matrix.board }}.img.sha256
            bsp/output/u-boot/idbloader.img
            bsp/output/u-boot/u-boot.itb
            bsp/output/u-boot/trust.img

      - name: Publish Image
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v2
        with:
          files: |
            talos/output/talos-${{ matrix.board }}.img
            talos/output/talos-${{ matrix.board }}.img.sha256
            bsp/output/u-boot/idbloader.img
            bsp/output/u-boot/u-boot.itb
            bsp/output/u-boot/trust.img
          tag_name: v${{ github.run_number }}
          body: "Talos Linux Build #${{ github.run_number }} for ${{ matrix.board }}."
