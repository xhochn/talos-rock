name: Build Talos Linux for Rockchip Boards

on:
  push:
    branches:
      - main
      - development
  schedule:
    - cron: '0 3 * * 1'  # Weekly build every Monday at 03:00 UTC

jobs:
  matrix_prep:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract branch name
        id: get_branch
        run: echo "branch_name=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Filter matrix
        id: set-matrix
        uses: JoshuaTheMiller/conditional-build-matrix@v2.0.1
        with:
          filter: '[?runOnBranch==`${{ env.branch_name }}` || runOnBranch==`any`]'
          inputFile: '.github/workflows/matrix_includes.json'

  build:
    needs: matrix_prep
    strategy:
      matrix: ${{ fromJson(needs.matrix_prep.outputs.matrix) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup build environment
        run: |
          sudo apt-get update
          sudo apt-get install -y git make gcc g++ \
          gcc-aarch64-linux-gnu g++-aarch64-linux-gnu \
          libssl-dev bc bison flex

      - name: Clone Radxa Kernel
        run: |
          git clone https://github.com/radxa/kernel.git -b ${{ matrix.kernel_branch }} kernel

      - name: Apply board-specific configuration
        run: |
          cd kernel
          cp ../boards/${{ matrix.board }}.config .config
          make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- olddefconfig
          make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- -j$(nproc)

      - name: Build U-Boot
        run: |
          git clone https://github.com/radxa/u-boot.git -b ${{ matrix.uboot_branch }} u-boot-radxa
          cd u-boot-radxa
          make ${{ matrix.board }}-rk3588_defconfig
          if [ "${{ matrix.nvme }}" == "enabled" ]; then
            echo "Enable NVMe support in U-Boot..."
            # Add NVMe support configurations here if needed
          else
            echo "NVMe support is disabled in this build."
          fi
          make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- -j$(nproc)
          cp idbloader.img u-boot.itb trust.img ../output/

      - name: Enable additional drivers
        run: |
          cd kernel
          echo "CONFIG_DRM_PANFROST=y" >> .config  # Panfrost GPU
          echo "CONFIG_MALI_GPU_PARTIAL_RENDER=y" >> .config
          echo "CONFIG_RTL8852BE=y" >> .config  # Network
          echo "CONFIG_RTL88XXAU=y" >> .config
          echo "CONFIG_USB_NET_CDCETHER=y" >> .config
          echo "CONFIG_USB_NET_RNDIS_HOST=y" >> .config
          make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- olddefconfig
          make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- -j$(nproc)

      - name: Build Talos image
        run: |
          git clone https://github.com/siderolabs/talos.git
          cd talos
          cp ../kernel/arch/arm64/boot/Image build/kernel/
          make image

      - name: Generate checksum
        run: |
          sha256sum talos/output/talos-${{ matrix.board }}.img > talos/output/talos-${{ matrix.board }}.img.sha256

      - name: Upload image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: talos-${{ matrix.board }}-nvme-${{ matrix.nvme }}
          path: |
            talos/output/talos-${{ matrix.board }}.img
            talos/output/talos-${{ matrix.board }}.img.sha256
            output/idbloader.img
            output/u-boot.itb
            output/trust.img

      - name: Publish image
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            talos/output/talos-${{ matrix.board }}.img
            talos/output/talos-${{ matrix.board }}.img.sha256